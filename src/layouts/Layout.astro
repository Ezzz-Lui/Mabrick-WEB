---
// Supports weights 100-900
import { ViewTransitions } from 'astro:transitions';
import '@fontsource-variable/onest';
import Header from '../components/Header.astro';
import HeroSection from '../components/HeroSection.astro';
import Features from '../components/Features.astro';
import Footer from '../components/Footer.astro';

interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head  >
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="https://i0.wp.com/mabrick.net/wp-content/uploads/2023/05/cropped-Isotipo-Blanco.jpg?fit=180%2C180&ssl=1" />
		<meta name="generator" content={Astro.generator} />
		<title>Mabrick</title>
		<ViewTransitions />
		<script type="text/javascript">
			(function(c,l,a,r,i,t,y){
				c[a]=c[a]||function(){(c[a].q=c[a].q||[]).push(arguments)};
				t=l.createElement(r);t.async=1;t.src="https://www.clarity.ms/tag/"+i;
				y=l.getElementsByTagName(r)[0];y.parentNode.insertBefore(t,y);
			})(window, document, "clarity", "script", "m2csab1c78");
		</script>
	</head>
	
	<body class="relative text-black dark:text-white">

		<div class="absolute top-0 z-[-2] h-screen w-screen bg-white bg-[radial-gradient(ellipse_80%_80%_at_50%_-20%,rgba(120,119,198,0.3),rgba(255,255,255,0))]"></div>
		<Header/> 
		<slot />
		<Footer/>

		<style is:global>
			:root {
				color-scheme: light dark;
			}
			html{
				font-family: 'Onest Variable', system-ui, sans-serif;
				scroll-behavior: smooth;
			}
		
			body{
				background-color: white;
				display: flex;
				flex-direction: column;
				min-height: 100vh;
				overscroll-behavior: none;
			}
		
		</style>
		<script>
			import { Modal } from 'flowbite'
		
			// Seleccionar el botón y el elemento modal
			const $buttonElement = document.querySelector('[data-collapse-toggle="mobile-menu-2"]');
			const $modalElement: HTMLElement | null = document.querySelector('#defaultModal');
		
			// Crear una nueva instancia del modal
			const modal = new Modal($modalElement);
		
			// Toggle del modal cuando se hace clic en el botón
			if ($buttonElement) {
				$buttonElement.addEventListener('click', () => modal.toggle());
			}
		</script>
	</body>
</html>


